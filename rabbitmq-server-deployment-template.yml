# Deployment identification
#
name: ((bosh_deployment))

# Packages & processes
#
releases: # https://bosh.io/releases
- name: rabbitmq-server
  version: ((bosh_release_version))

# VM base images
#
stemcells: # https://bosh.io/stemcells
- name: ((bosh_stemcell_name))
  version: ((bosh_stemcell_version))
  alias: default

# Lifecycle configurations
#
update:
  canaries: ((rmq_nodes_count))  # Update the cluster as a whole
                                 #
                                 # Since RabbitMQ native clustering requires the last stopped node to start first,
                                 # we must start all nodes at once, otherwise the cluster won't form.
  canary_watch_time: &watch_time 10000-60000 # 10s - 1m
  max_in_flight: ((rmq_nodes_count))
  serial: false
  update_watch_time: *watch_time

# VM groups
#
instance_groups:
- name: rmq
  instances: ((rmq_nodes_count))
  vm_type: ((rmq_vm_type))
  vm_extensions:
  - preemptible
  - 50GB_ephemeral_disk
  persistent_disk_type: ((rmq_persistent_disk_type))
  env:
    bosh:
      swap_size: 1024
  stemcell: default
  jobs:
  - name: observer_cli
    release: rabbitmq-server
  - name: rabbitmq-server
    release: rabbitmq-server
    properties:
      erlang:
        cookie: ((erlang_cookie))
        lock_counting: false
        version: ((erlang_version))
      rabbitmq-server:
        additional_erl_args: ''
        admin_pass: ((rmq_server_admin_pass))
        admin_user: ((rmq_server_admin_user))
        channel_max: 2048
        cluster_keepalive_interval: 10000
        cluster_partition_handling: ignore
        collect_statistics: coarse
        collect_statistics_interval: 5000
        credit_flow_default_credit: '{400, 200}'
        create_demo_user: false
        debug: true
        delegate_count: 16
        disk_free_limit: '{mem_relative, 1.0}'
        distribution_buffer_size: 128000
        fhc_read_buffering: false
        fhc_write_buffering: true
        file_descriptor_limit: 100000
        generic-unix-url: ((rmq_server_package))
        hipe_compile: false
        lazy_queue_explicit_gc_run_operation_threshold: 1000
        log_directory: /var/vcap/sys/log/rabbitmq-server
        log_levels: info
        max_erlang_atoms: 5000000
        max_erlang_processes: 1048576
        mirroring_flow_control: true
        mirroring_sync_batch_size: 4096
        mnesia_base: /var/vcap/store/rabbitmq-server/mnesia
        mnesia_table_loading_retry_limit: 10
        mnesia_table_loading_retry_timeout: 30000
        msg_store_credit_disc_bound: '{4000, 800}'
        msg_store_file_size_limit: 16777216
        msg_store_io_batch_size: 4096
        num_tcp_acceptors: 10
        only_enable_these_plugins: []
        queue_explicit_gc_run_operation_threshold: 1000
        queue_index_embed_msgs_below: 4096
        queue_master_locator: client-local
        scheduler_bind_type: db
        tcp_listen_options: ''
        vm_memory_high_watermark: 0.5
        vm_memory_high_watermark_paging_ratio: 0.5
      rabbitmq-management:
        rates_mode: basic
        global_statistics_retention: '[{605,5}, {3660,60}, {29400,600}, {88200,1800}]'
        basic_statistics_retention: '[{605,5}, {3660,60}]'
        detailed_statistics_retention: '[{605,5}]'
      rabbitmq-trust-store:
        directory: /var/vcap/store/rabbitmq-server/trust-store/whitelist
      prometheus_rabbitmq_exporter:
        connections_total_enabled: false
        memory_stat_enabled: false
  networks:
  - name: ((rmq_network))
  azs:
  - ((rmq_az))
