# shellcheck source=/dev/null
. /var/vcap/jobs/rabbitmq-server/debug

configureDebugLevel() {
  [[ $DEBUG = true ]] && set -x
}

<% if spec.release %>
export BOSH_RELEASE_VERSION="<%= "#{spec.release.version}" %>"
<% else %>
export BOSH_RELEASE_VERSION="N/A"
<% end %>

export BOOTSTRAP_NODE="<%= "true" if spec.bootstrap %>"
export BOOTSTRAP_NODE_INSTANCE="<%= "#{spec.name}.0" %>"

export RABBITMQ_SERVICE_USER=vcap
export RABBITMQ_SERVICE_GROUP=vcap

export RABBITMQ_PROCESS_NAME=beam.smp

# start installs the server, which can take a while...
export MONIT_START_TIMEOUT=90

timeout_per_worker_process_type=30 # defined as WORKER_WAIT in https://github.com/rabbitmq/rabbitmq-common/blob/master/include/rabbit.hrl#L252-L253
number_of_worker_process_types=5   # 1. connections
                                   # 2. channels
                                   # 3. queues
                                   # 4. persistent message store
                                   # 5. transient message store
export SERVICE_SHUTDOWN_TIMEOUT=$((timeout_per_worker_process_type * number_of_worker_process_types))
export EPMD_TIMEOUT=5

export RABBITMQ_RUN_DIR=/var/vcap/sys/run/rabbitmq-server
export RABBITMQ_PID_FILE="$RABBITMQ_RUN_DIR/beam.pid"
export EPMD_PID_FILE="$RABBITMQ_RUN_DIR/epmd.pid"

export RABBITMQ_SERVER_PACKAGE_URL="<%= p("rabbitmq-server.generic-unix-url") %>"
export RABBITMQ_SERVER_PACKAGE_ARCHIVE="${RABBITMQ_SERVER_PACKAGE_URL##*/}"
_rabbitmq_server_package_version_with_extension="${RABBITMQ_SERVER_PACKAGE_URL##*generic-unix-}"
export RABBITMQ_SERVER_PACKAGE_VERSION="${_rabbitmq_server_package_version_with_extension%%.tar.*z}"
export RABBITMQ_SERVER_PACKAGES_DIR="/var/vcap/data/rabbitmq-server"
export RABBITMQ_SERVER_PACKAGE="${RABBITMQ_SERVER_PACKAGES_DIR}/rabbitmq_server-${RABBITMQ_SERVER_PACKAGE_VERSION}"
export RABBITMQ_SERVER_JOB_PACKAGE=/var/vcap/jobs/rabbitmq-server/packages/rabbitmq-server

export RABBITMQADMIN_BIN="${RABBITMQ_SERVER_JOB_PACKAGE}/sbin/rabbitmqadmin"
export RABBITMQADMIN_DOWNLOAD_URL="http://127.0.0.1:15672/cli/rabbitmqadmin"

export RABBITMQ_LOG_BASE="<%= p("rabbitmq-server.log_directory") %>"
export RABBITMQ_CONFIG_FILE=/var/vcap/jobs/rabbitmq-server/rabbitmq
export RABBITMQ_MNESIA_BASE="<%= p("rabbitmq-server.mnesia_base") %>"
export RABBITMQ_SNAPSHOTS_DIR="<%= p("rabbitmq-server.snapshots_directory") %>"
export RABBITMQ_TRUST_STORE_DIR="<%= p("rabbitmq-trust-store.directory") %>"
export RABBITMQ_PLUGINS_DIR="$RABBITMQ_SERVER_JOB_PACKAGE/plugins"
export RABBITMQ_THIRD_PARTY_PLUGINS_DIR="/var/vcap/jobs/rabbitmq-server/packages/rabbitmq-plugins"
export RABBITMQ_PROMETHEUS_DIR="/var/vcap/jobs/rabbitmq-server/packages/prometheus.erl"

export RABBITMQ_ONLY_ENABLE_THESE_PLUGINS="<%= p("rabbitmq-server.only_enable_these_plugins").join(" ") %>"

export RABBITMQ_ADMIN_USER="<%= p("rabbitmq-server.admin_user") %>"
export RABBITMQ_ADMIN_PASS="<%= p("rabbitmq-server.admin_pass") %>"

export RABBITMQ_CREATE_DEMO_USER="<%= p("rabbitmq-server.create_demo_user").to_s %>"

export RABBITMQ_NODENAME="rabbit@<%= "#{spec.name}#{spec.index}-#{spec.deployment}" %>"
export RABBITMQ_CLUSTER_NAME="<%= spec.deployment %>"

export RABBITMQ_SCHEDULER_BIND_TYPE="<%= p("rabbitmq-server.scheduler_bind_type") %>"
export RABBITMQ_DISTRIBUTION_BUFFER_SIZE="<%= p("rabbitmq-server.distribution_buffer_size") %>"
export RABBITMQ_MAX_NUMBER_OF_PROCESSES="<%= p("rabbitmq-server.max_erlang_processes") %>"
export RABBITMQ_MAX_NUMBER_OF_ATOMS="<%= p("rabbitmq-server.max_erlang_atoms") %>"

export RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS="+stbt $RABBITMQ_SCHEDULER_BIND_TYPE +zdbbl $RABBITMQ_DISTRIBUTION_BUFFER_SIZE +P $RABBITMQ_MAX_NUMBER_OF_PROCESSES +t $RABBITMQ_MAX_NUMBER_OF_ATOMS <%= p("rabbitmq-server.additional_erl_args") %>"

<% if p("erlang.version").to_i >= 20 %>
export ERLANG_VERSION_SUPPORTS_COMPILED_PROMETHEUS=true
<% else %>
export ERLANG_VERSION_SUPPORTS_COMPILED_PROMETHEUS=false
<% end %>

<% if p("erlang.version").to_i >= 19 %>
# looking_glass is implemented as an erl_tracer NIF and thus requires Erlang/OTP 19.0 or above
# https://github.com/rabbitmq/looking_glass
export RABBITMQ_SERVER_START_ARGS="-pz /var/vcap/jobs/rabbitmq-server/packages/looking_glass/ebin -pz /var/vcap/jobs/rabbitmq-server/packages/looking_glass/deps/lz4/ebin"
<% end %>

<% if_link("periodic_shutdown") do |_| %>
export RABBITMQ_NODES="<%= link("rabbitmq-server").instances.map { |i| "rabbit@rmq#{i.index}-#{spec.deployment}" }.join(' ') %>"
<% end %>

<% if_link("observer_cli") do |observer_cli| %>
export RABBITMQ_SERVER_START_ARGS="<%= observer_cli.p("observer_cli-paths") %> $RABBITMQ_SERVER_START_ARGS"
<% end %>

<% if p("erlang.lock_counting") %>
export RABBITMQ_SERVER_START_ARGS="-emu_type lcnt $RABBITMQ_SERVER_START_ARGS"
export RABBITMQ_PROCESS_NAME=beam.lcnt.smp
<% end %>

export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export ERL_INETRC=/var/vcap/jobs/rabbitmq-server/erl_inetrc
export ERL_AFLAGS="-kernel shell_history enabled"
export ERLANG_COOKIE="<%= p("erlang.cookie") %>"
export ERLANG_VERSION=<%= p("erlang.version") %>
export ERLANG_HOME=/var/vcap/jobs/rabbitmq-server/packages/erlang-$ERLANG_VERSION

# erl(1) / erlc(1) require $HOME to be set
# Default to the system user that runs rabbitmq-server
[ -n "$HOME" ] || export HOME=/home/"$RABBITMQ_SERVICE_USER"

export PATH="$RABBITMQ_SERVER_JOB_PACKAGE/sbin:$ERLANG_HOME/bin:/var/vcap/jobs/rabbitmq-server/bin:/var/vcap/jobs/rabbitmq-server/packages/rabbitmq-support-tools/scripts:$PATH"
